import{o as n,c as a,a as s,d as t,e,b as p}from"./app.21b67795.js";const o='{"title":"Try Getting an Optional Service by Service Type and Name","description":"","frontmatter":{},"relativePath":"guide/ioc/resolving/try-getting-an-optional-service-by-service-type-and-name.md","lastUpdated":1630569938705}',c={},i=t("h1",{id:"try-getting-an-optional-service-by-service-type-and-name"},[t("a",{class:"header-anchor",href:"#try-getting-an-optional-service-by-service-type-and-name","aria-hidden":"true"},"#"),e(" Try Getting an Optional Service by Service Type and Name")],-1),u=t("p",null,[e("Just use the "),t("code",null,"IContainer.TryGetInstance<T>(name)"),e(" or "),t("code",null,"IContainer.TryGetInstance(Type pluginType, string name)"),e(" method as shown below:")],-1),l=p('',3);c.render=function(t,e,p,o,c,r){return n(),a("div",null,[i,u,s(" snippet: sample_TryGetInstanceViaNameAndGeneric_ReturnsInstance_WhenTypeFound "),l])};export{o as __pageData,c as default};
